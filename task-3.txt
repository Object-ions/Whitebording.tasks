Question #3: Compressing Strings
Write an algorithm that takes a string with repeated characters and compresses them, using a number to show how many times the repeated character has been compressed. For instance, aaa would be written as 3a. Solve the problem with and without recursion.

Example
Input: "aaabccdddda"

Output: "3ab2c4da"

/*************************************************/
Solution A:

function compressString(string) {
  let count = 1;
  let compressedString = '';

  for (let i = 0; i < string.length; i++) {
    if (string[i] === string[i + 1]) {
      count ++;
    } else {
      compressedString += (count > 1 ? count: '') + string[i];
      count = 1;
    }
  }

  return compressedString;
}