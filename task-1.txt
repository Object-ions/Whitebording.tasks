Question #1: Turning Strings to URLs
URLs cannot have spaces. Instead, all spaces in a string are replaced with %20. Write an algorithm that replaces all spaces in a string with %20.

You may not use the replace() method or regular expressions to solve this problem. Solve the problem with and without recursion.

Example
Input: "Jasmine Ann Jones"

Output: "Jasmine%20Ann%20Jones"

/*************************************************/
Solution A:

  1. Take the string and break it into an array using white space " " as the separator
  .split() 
  2. join the array back to a string using .join() with %20 as the joining factor


function stringToURL(string) {
  return string.split(' ').join('%20');
}


refactoring:
const stringToURL = (string) => string.split(' ').join('%20');

/************************************************/

Solution B:

for recursion we will need
1. Termination
2. Base case
3. Recrusion itself

1. Termination can be 2 white spaces
2. Base case will be if the length of the string is equal to the index
  (meaning we finish the loop)
3. Iterate through the string and replace " " with "%20"

